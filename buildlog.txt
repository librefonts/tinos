# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/tinos/METADATA.json /home/travis/build/fontdirectory/tinos/builds/build
$ cp -a /home/travis/build/fontdirectory/tinos/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/tinos/builds/build
$ cp -a Tinos-Italic.ttf.ttx Tinos-Regular.ttf.ttx Tinos-Bold.ttf.ttx Tinos-BoldItalic.ttf.ttx Tinos-Italic.ttf.G_S_U_B_.ttx Tinos-Italic.ttf._f_p_g_m.ttx Tinos-Italic.ttf._l_o_c_a.ttx Tinos-Italic.ttf._g_l_y_f.ttx Tinos-Italic.ttf._p_o_s_t.ttx Tinos-Italic.ttf._g_a_s_p.ttx Tinos-Italic.ttf.L_T_S_H_.ttx Tinos-Italic.ttf._h_e_a_d.ttx Tinos-Italic.ttf._m_a_x_p.ttx Tinos-Italic.ttf._h_m_t_x.ttx Tinos-Italic.ttf.O_S_2f_2.ttx Tinos-Italic.ttf.G_D_E_F_.ttx Tinos-Italic.ttf._k_e_r_n.ttx Tinos-Italic.ttf._n_a_m_e.ttx Tinos-Italic.ttf.G_P_O_S_.ttx Tinos-Italic.ttf._h_h_e_a.ttx Tinos-Italic.ttf._h_d_m_x.ttx Tinos-Italic.ttf.V_D_M_X_.ttx Tinos-Italic.ttf._c_m_a_p.ttx Tinos-Italic.ttf._c_v_t.ttx Tinos-Italic.ttf.GlyphOrder.ttx Tinos-Italic.ttf._p_r_e_p.ttx Tinos-Regular.ttf.G_P_O_S_.ttx Tinos-Regular.ttf._h_d_m_x.ttx Tinos-Regular.ttf._p_o_s_t.ttx Tinos-Regular.ttf._p_r_e_p.ttx Tinos-Regular.ttf._c_m_a_p.ttx Tinos-Regular.ttf.G_D_E_F_.ttx Tinos-Regular.ttf._k_e_r_n.ttx Tinos-Regular.ttf.GlyphOrder.ttx Tinos-Regular.ttf._h_e_a_d.ttx Tinos-Regular.ttf._h_h_e_a.ttx Tinos-Regular.ttf._c_v_t.ttx Tinos-Regular.ttf._g_l_y_f.ttx Tinos-Regular.ttf._l_o_c_a.ttx Tinos-Regular.ttf._m_a_x_p.ttx Tinos-Regular.ttf._n_a_m_e.ttx Tinos-Regular.ttf._f_p_g_m.ttx Tinos-Regular.ttf._h_m_t_x.ttx Tinos-Regular.ttf._g_a_s_p.ttx Tinos-Regular.ttf.O_S_2f_2.ttx Tinos-Regular.ttf.G_S_U_B_.ttx Tinos-Regular.ttf.L_T_S_H_.ttx Tinos-Regular.ttf.V_D_M_X_.ttx Tinos-Bold.ttf._l_o_c_a.ttx Tinos-Bold.ttf.GlyphOrder.ttx Tinos-Bold.ttf._h_h_e_a.ttx Tinos-Bold.ttf._p_r_e_p.ttx Tinos-Bold.ttf.V_D_M_X_.ttx Tinos-Bold.ttf.O_S_2f_2.ttx Tinos-Bold.ttf.G_S_U_B_.ttx Tinos-Bold.ttf._c_m_a_p.ttx Tinos-Bold.ttf._h_m_t_x.ttx Tinos-Bold.ttf.L_T_S_H_.ttx Tinos-Bold.ttf._k_e_r_n.ttx Tinos-Bold.ttf._f_p_g_m.ttx Tinos-Bold.ttf._n_a_m_e.ttx Tinos-Bold.ttf.G_P_O_S_.ttx Tinos-Bold.ttf.G_D_E_F_.ttx Tinos-Bold.ttf._g_a_s_p.ttx Tinos-Bold.ttf._p_o_s_t.ttx Tinos-Bold.ttf._c_v_t.ttx Tinos-Bold.ttf._h_e_a_d.ttx Tinos-Bold.ttf._m_a_x_p.ttx Tinos-Bold.ttf._h_d_m_x.ttx Tinos-Bold.ttf._g_l_y_f.ttx Tinos-BoldItalic.ttf._m_a_x_p.ttx Tinos-BoldItalic.ttf.L_T_S_H_.ttx Tinos-BoldItalic.ttf.V_D_M_X_.ttx Tinos-BoldItalic.ttf._p_o_s_t.ttx Tinos-BoldItalic.ttf._g_a_s_p.ttx Tinos-BoldItalic.ttf._p_r_e_p.ttx Tinos-BoldItalic.ttf._g_l_y_f.ttx Tinos-BoldItalic.ttf._h_e_a_d.ttx Tinos-BoldItalic.ttf._h_h_e_a.ttx Tinos-BoldItalic.ttf.G_D_E_F_.ttx Tinos-BoldItalic.ttf._f_p_g_m.ttx Tinos-BoldItalic.ttf.G_P_O_S_.ttx Tinos-BoldItalic.ttf._c_m_a_p.ttx Tinos-BoldItalic.ttf.G_S_U_B_.ttx Tinos-BoldItalic.ttf.O_S_2f_2.ttx Tinos-BoldItalic.ttf._c_v_t.ttx Tinos-BoldItalic.ttf._n_a_m_e.ttx Tinos-BoldItalic.ttf.GlyphOrder.ttx Tinos-BoldItalic.ttf._h_m_t_x.ttx Tinos-BoldItalic.ttf._l_o_c_a.ttx Tinos-BoldItalic.ttf._k_e_r_n.ttx Tinos-BoldItalic.ttf._h_d_m_x.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Italic.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Regular.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Bold.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-BoldItalic.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx Tinos-Italic.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Italic.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
$ fontbakery-check.py upstream-ttx Tinos-Regular.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Regular.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
$ fontbakery-check.py upstream-ttx Tinos-Bold.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Bold.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
$ fontbakery-check.py upstream-ttx Tinos-BoldItalic.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/tinos/builds/build /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Regular.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-BoldItalic.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Bold.ttx /home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Italic.ttx
Compiling "/home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Regular.ttx" to "/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-BoldItalic.ttx" to "/home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Bold.ttx" to "/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/tinos/builds/build/sources/Tinos-Italic.ttx" to "/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
### Test Tinos-Regular.ttf
$ fontbakery-check.py result Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
Parameter              Tinos-Regular.ttf    Tinos-BoldItalic.ttf    Tinos-Italic.ttf    Tinos-Bold.ttf    
ymax                   2010                 2009                    2009                2064              
hhea.ascent            2064                 2064                    2064                2064              
OS/2.sTypoAscender     2064                 2064                    2064                2064              
OS/2.usWinAscent       2064                 2064                    2064                2064              
ymin                   -621                 -621                    -621                -621              
hhea.descent           -621                 -621                    -621                -621              
OS/2.sTypoDescender    -621                 -621                    -621                -621              
OS/2.usWinDescent      621                  621                     621                 621               
hhea.lineGap           0                    0                       0                   0                 
OS/2.sTypoLineGap      0                    0                       0                   0                 
hhea total             2685                 2685                    2685                2685              
typo total             2685                 2685                    2685                2685              
win total              2685                 2685                    2685                2685              
UPM:Heights            2048:2631            2048:2630               2048:2630           2048:2685         
UPM:Heights %          128 %                128 %                   128 %               131 %             


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
### Optimize TTF Tinos-Regular.ttf
$ ls -l 'Tinos-Regular.ttf'* # look at the size savings of that subset process
Tinos-Regular.ttf.opt: 436316 bytes
Tinos-Regular.ttf: 471800 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf.opt /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
### Autohint TTFs (ttfautohint) Tinos-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf '/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf: 436316 bytes
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.autohint.ttf: 334220 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.autohint.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
### Subset TTFs (pyftsubset) Tinos-Regular.ttf
$ pyftsubset Tinos-Regular.latin
$ pyftsubset Tinos-Regular.menu
spaceWidth is    512
nbspWidth is     512
Nothing to do
strippedname:/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Regular.ttf
### Test Tinos-BoldItalic.ttf
$ fontbakery-check.py result Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
### Optimize TTF Tinos-BoldItalic.ttf
$ ls -l 'Tinos-BoldItalic.ttf'* # look at the size savings of that subset process
Tinos-BoldItalic.ttf.opt: 418020 bytes
Tinos-BoldItalic.ttf: 453372 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf.opt /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
### Autohint TTFs (ttfautohint) Tinos-BoldItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf '/home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf: 418020 bytes
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.autohint.ttf: 339908 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.autohint.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
### Subset TTFs (pyftsubset) Tinos-BoldItalic.ttf
$ pyftsubset Tinos-BoldItalic.latin
$ pyftsubset Tinos-BoldItalic.menu
spaceWidth is    512
nbspWidth is     512
Nothing to do
strippedname:/home/travis/build/fontdirectory/tinos/builds/build/Tinos-BoldItalic.ttf
### Test Tinos-Bold.ttf
$ fontbakery-check.py result Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
### Optimize TTF Tinos-Bold.ttf
$ ls -l 'Tinos-Bold.ttf'* # look at the size savings of that subset process
Tinos-Bold.ttf.opt: 412556 bytes
Tinos-Bold.ttf: 448028 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf.opt /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
### Autohint TTFs (ttfautohint) Tinos-Bold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf '/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf: 412556 bytes
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.autohint.ttf: 352632 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.autohint.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
### Subset TTFs (pyftsubset) Tinos-Bold.ttf
$ pyftsubset Tinos-Bold.latin
$ pyftsubset Tinos-Bold.menu
spaceWidth is    512
nbspWidth is     512
Nothing to do
strippedname:/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Bold.ttf
### Test Tinos-Italic.ttf
$ fontbakery-check.py result Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.fix /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
### Optimize TTF Tinos-Italic.ttf
$ ls -l 'Tinos-Italic.ttf'* # look at the size savings of that subset process
Tinos-Italic.ttf.opt: 416968 bytes
Tinos-Italic.ttf: 452176 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf.opt /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
### Autohint TTFs (ttfautohint) Tinos-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf '/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf: 416968 bytes
/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.autohint.ttf: 332220 bytes
$ mv /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.autohint.ttf /home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
### Subset TTFs (pyftsubset) Tinos-Italic.ttf
$ pyftsubset Tinos-Italic.latin
$ pyftsubset Tinos-Italic.menu
spaceWidth is    512
nbspWidth is     512
Nothing to do
strippedname:/home/travis/build/fontdirectory/tinos/builds/build/Tinos-Italic.ttf
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/tinos/builds/build
{} exists
Designer's name from font is: Steve Matteson
Original size: 334220\nGzip size: 178227
Family Name: Tinos
PS Name: Tinos
Full Name: Tinos
Style: normal
Weight: 400
Filename: Tinos-Regular.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
Family Name: Tinos
PS Name: Tinos-BoldItalic
Full Name: Tinos Bold Italic
Style: italic
Weight: 700
Filename: Tinos-BoldItalic.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
Family Name: Tinos
PS Name: Tinos-Italic
Full Name: Tinos Italic
Style: italic
Weight: 400
Filename: Tinos-Italic.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
Family Name: Tinos
PS Name: Tinos-Bold
Full Name: Tinos Bold
Style: normal
Weight: 700
Filename: Tinos-Bold.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_cyrillic(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_cyrillic_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_greek(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_greek_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_vietnamese(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
{
  "name": "Tinos", 
  "designer": "Steve Matteson", 
  "license": "Apache2", 
  "visibility": "External", 
  "category": "Serif", 
  "size": 254668, 
  "fonts": [
    {
      "name": "Tinos", 
      "postScriptName": "Tinos", 
      "fullName": "Tinos", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Tinos-Regular.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }, 
    {
      "name": "Tinos", 
      "postScriptName": "Tinos-BoldItalic", 
      "fullName": "Tinos Bold Italic", 
      "style": "italic", 
      "weight": 700, 
      "filename": "Tinos-BoldItalic.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }, 
    {
      "name": "Tinos", 
      "postScriptName": "Tinos-Italic", 
      "fullName": "Tinos Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "Tinos-Italic.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }, 
    {
      "name": "Tinos", 
      "postScriptName": "Tinos-Bold", 
      "fullName": "Tinos Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Tinos-Bold.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2010-11-18"
}
